初始化一个Git仓库，使用git init命令
添加文件到Git仓库，分两步：
1、使用命令git add <file>，可多次使用，添加多个文件；
2、使用命令git commit -m <message>， 完成。

git 给远程库起的默认名称是origin，如果有多个远程库，需要用不同的名称来标识不同的远程库。
先删除已关联的名为origin的远程库：
git remote rm origin
然后，关联GitHub远程库
git remote add github git@github.com:Andy2018712/learngit.git
注意，远程库的名称叫github
接着，关联码云的远程库：
git remote add gitee git@gitee.com:LiuSheng2019/learngit.git
用git remote -v 查看远程库信息

如果要推送到github，使用命令：
git push github master
如果推送到码云，使用命令：
git push gitee master

遇到无法提交的问题，一般先pull，即，git pull gitee master 这里的gitee是码云仓库，而master是需要上传的分支。
两个仓库不同，发现git输出refusing to merge unrelated histories 无法pull内容
因为他们是两个不同的项目，合并两个不同项目，git需要在git pull之后添加一句代码（git 2.9.2版本及之后版本），
--allow-unrelated-histories告诉git允许不相关历史合并。
如果使用该方法还无法提交，需要看一下是不是发生了冲突，解决冲突再提交。

git pull遇到问题Access denied: Repository Not Found
fatal: Could not read from remote repository.
解决办法：检查远程url和本地设置的远程url是否存在冲突，若存在冲突，解决冲突，修改为一致的url即可。


#直接使用git submodule就可以不必要将另一个项目复制一份，直接引用即可。
#添加 git 子模块
git submodule add repourl

#初次clone带有子模块的仓库，如果想查看子模块的内容：
git submodule init
git submodule update
或者 git submodule update --init --recursive

#更新子模块地址
vi .gitmodules  #修改url地址
git submodule sync

然后提交更改即可

#删除子模块
git rm --cached {submodule_path}   #submodule_path即子模块在仓库下的路径
git commit -m 'xxx'
git push
 
#将分支名作为参数，然后加上checkout语句，就可以拉取任意分支了
git checkout 分支名 （参数， 外部传递）
git reset --hard <commit id>
git pull origin 分支名 

#同样，也可以推送任意分支
git push 远程库名 分支名

=============================================================================================================
 代码分支提交注意事项：
master是主开发分支，每个人可以有1到多个开发分支。
例如我日常开发分支是zjjdev。
如果手头正在开发的没弄完，临时有个功能要修改，或有个bug要修订，也可以另建一个分支，开发完成后合并到master或日常开发分支上，删掉临时分支。

合并分支的原则：
1. 当个人开发分支还不完善，还不能让其它人合并，但需要在服务器上存储时，push到服务器自己的分支上。
  命令：       git push orign zjjdev  或  git push origin zjjdev:zjjdev   
  smartgit：工具栏push按钮或右键菜单：push 'zjjdev'
  
2. 个人开发分支测试ok，先把其它人提交的修改合并到自己的开发分支上，再push到服务器上的master分支。
1) fetch服务器上的修改
2) 合并其它人master的修改(merge或rebase)
   git merge origin/master
  如果两边的修改差异较大，中间间隔的提交数比较多，用merge；修改较少用rebase，历史记录清爽些。
3）测试合并后的修改，push到服务器上的master分支
   命令：git push origin zjjdev:master
smartgit：push按钮右下角的箭头点开，push to...，或右键菜单：push 'zjjdev' To .... ，然后设置Custom Ref为master（会记忆这个参数，下次不用输入）

=====================================================================================================================

使用SmartGit忽略掉某些不需要加入版本控制的文件或目录，会自动生成一个.gitignore文件
可以编辑该文件，用于忽略掉某些文件或目录

=============================================================================================
#########使用git查看远程分支，远程分支会用红色表示出来（如果开了颜色支持的话）#######################################
git branch -a